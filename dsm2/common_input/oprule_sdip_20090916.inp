# Description:
# Stage-based operation of SDIP gates
OPERATING_RULE
NAME          ACTION                                                                                                                                                                                                   TRIGGER                                                                                                            
glc_close     "SET gate_elev(gate=grant_line_barrier,device=glc_weir) TO IFELSE(flow56>300, (IFELSE(flow56>2000, (IFELSE(flow56>3000, (IFELSE(flow56>3500, -2.5, -2)), -1)), ${GLC_PROTECT_ELEV})),0) RAMP 30MIN"  "(NOT sjr_high) AND (NOT ${GLC_FLOOD}) AND ((${GLC_STAGE_OP} AND ${GLC_STAGE_LOW}) OR ${GLC_UNIDIR})"               
glc_fab_close "SET gate_elev(gate=grant_line_barrier,device=fabian_weir) TO IFELSE(flow56>300, (IFELSE(flow56>2000, (IFELSE(flow56>3000, (IFELSE(flow56>3500, -2.5, -2)), -1)), ${GLC_PROTECT_ELEV})),0) RAMP 30MIN" "(NOT sjr_high) AND (NOT ${GLC_FLOOD}) AND ((${GLC_STAGE_OP} AND ${GLC_STAGE_LOW}) OR ${GLC_UNIDIR})"               
glc_fab_open  "SET gate_elev(gate=grant_line_barrier,device=fabian_weir) TO bottom_elev_fabian RAMP 30MIN"                                                                                                         "sjr_high OR ${GLC_FLOOD} OR (${GLC_STAGE_OP} AND ${GLC_STAGE_RELAX}) OR NOT (${GLC_STAGE_OP} OR ${GLC_UNIDIR})"    
glc_open      "SET gate_elev(gate=grant_line_barrier,device=glc_weir) TO  bottom_elev_glc RAMP 30MIN"                                                                                                              "sjr_high OR ${GLC_FLOOD} OR (${GLC_STAGE_OP} AND ${GLC_STAGE_RELAX}) OR NOT (${GLC_STAGE_OP} OR ${GLC_UNIDIR})"    
glc_remove    "SET gate_install(gate=grant_line_barrier) TO REMOVE"                                                                                                                                                    ${GLC_REMOVE}                                                                                                       
midr_close    "SET gate_elev(gate=middle_r_barrier,device=weir) TO IFELSE(${MIDR_UNIDIR}, 5, ${MIDR_PROTECT_ELEV})"                                                                                                "(NOT sjr_high) AND (NOT ${MIDR_FLOOD}) AND ((${MIDR_STAGE_OP} AND ${MIDR_STAGE_LOW}) OR ${MIDR_UNIDIR})"           
midr_open     "SET gate_elev(gate=middle_r_barrier,device=weir) TO  bottom_elev_midr RAMP 30MIN"                                                                                                                   "sjr_high OR ${MIDR_FLOOD} OR (${MIDR_STAGE_OP} AND ${MIDR_STAGE_RELAX}) OR NOT (${MIDR_STAGE_OP} OR ${MIDR_UNIDIR})" 
midr_remove   "SET gate_install(gate=middle_r_barrier) TO REMOVE"                                                                                                                                                      ${MIDR_REMOVE}                                                                                                      
oldr_close    "SET gate_elev(gate=old_r@tracy_barrier,device=weir) TO IFELSE(${OLDR_UNIDIR}, 5, ${OLDR_PROTECT_ELEV})"                                                                                             "(NOT sjr_high) AND (NOT ${OLDR_FLOOD}) AND ((${OLDR_STAGE_OP} AND ${OLDR_STAGE_LOW}) OR ${OLDR_UNIDIR})"           
oldr_open     "SET gate_elev(gate=old_r@tracy_barrier,device=weir) TO  bottom_elev_oldr RAMP 30MIN"                                                                                                                "sjr_high OR ${OLDR_FLOOD} OR (${OLDR_STAGE_OP} AND ${OLDR_STAGE_RELAX}) OR NOT (${OLDR_STAGE_OP} OR ${OLDR_UNIDIR})" 
oldr_remove   "SET gate_install(gate=old_r@tracy_barrier) TO REMOVE"                                                                                                                                                   ${OLDR_REMOVE}                                                                                                      
orh_close     "SET gate_op(gate=old_r@head_barrier,device=weir,direction=from_node) TO CLOSE RAMP 60MIN WHILE SET gate_op(gate=old_r@head_barrier,device=weir,direction=to_node) TO CLOSE RAMP 60MIN"                  "a_vamp AND (NOT sjr_high)"                                                                                         
orh_leaky     "SET gate_op(gate=old_r@head_barrier,device=weir,direction=from_node) TO ${LEAKY_OP} RAMP 60MIN WHILE SET gate_op(gate=old_r@head_barrier,device=weir,direction=to_node) TO ${LEAKY_OP} RAMP 60MIN"      "a_fall AND (NOT sjr_high)"                                                                                         
orh_open      "SET gate_op(gate=old_r@head_barrier,device=weir,direction=from_node) TO OPEN RAMP 60MIN WHILE SET gate_op(gate=old_r@head_barrier,device=weir,direction=to_node) TO OPEN RAMP 60MIN"                    "sjr_high OR a_winter OR a_summer OR (a_late_summer AND (NOT orh_partial_sjr_flow))"                                
orh_partial   "SET gate_op(gate=old_r@head_barrier,device=weir,direction=from_node) TO ${PARTIAL_OP} RAMP 60MIN WHILE SET gate_op(gate=old_r@head_barrier,device=weir,direction=to_node) TO ${PARTIAL_OP} RAMP 60MIN"  "a_late_summer AND orh_partial_sjr_flow"                                                                            
orh_remove    "SET gate_install(gate=old_r@head_barrier) TO REMOVE"                                                                                                                                                    ${ORH_REMOVE}                                                                                                       
END



OPRULE_EXPRESSION
NAME                    DEFINITION                                                                                                                                    
a_fall                  "SEASON > ${FALL_START} AND SEASON < ${FALL_END}"                                                                                              
a_late_summer           "SEASON > ${SUMMER_END} AND SEASON < ${FALL_START}"                                                                                            
a_summer                "SEASON > ${VAMP_END} AND SEASON <= ${SUMMER_END}"                                                                                             
a_vamp                  "SEASON >= ${VAMP_START} AND SEASON <= ${VAMP_END}"                                                                                            
a_winter                "SEASON > ${FALL_END} OR SEASON < ${VAMP_START}"                                                                                               
bottom_elev_fabian      -6.4                                                                                                                                           
bottom_elev_glc         -16.4                                                                                                                                          
bottom_elev_midr        -6.3                                                                                                                                           
bottom_elev_oldr        -6.4                                                                                                                                           
flow56                  "chan_flow(channel=56, dist=0)"                                                                                                                
glc_flood               "chan_stage(channel=213,dist=0) - chan_stage(channel=212,dist=length) > 0.0"                                                                   
glc_op                  "(ts(name=vernalis_flow) < ${GLC_OPEN_FLOW} AND (a_summer OR a_winter OR a_late_summer)) OR (a_vamp OR a_fall)"                                
glc_stage_low           "(chan_stage(channel=207,dist=36) < ${CLOSE_THRESH})"                                                                                          
glc_stage_relax         "(chan_stage(channel=207,dist=36) > ${OPEN_THRESH})"                                                                                           
midr_ebb                "chan_stage(channel=133,dist=0) - chan_stage(channel=134,dist=length) > -0.01"                                                                 
midr_flood              "chan_stage(channel=134,dist=0) - chan_stage(channel=133,dist=length) > 0."                                                                    
midr_op                 "(ts(name=vernalis_flow) > ${MIDR_TRIGGER_FLOW} AND (a_summer OR a_late_summer OR a_winter)) OR (${VERNALIS_CLEAN} AND (a_summer OR a_winter))" 
midr_stage_low          "(chan_stage(channel=126,dist=3951) < ${CLOSE_THRESH})"                                                                                        
midr_stage_relax        "(chan_stage(channel=126,dist=3951) > ${OPEN_THRESH})"                                                                                         
midr_unidir             "(NOT ${VERNALIS_CLEAN} AND (ts(name=vernalis_flow)<${MIDR_OPEN_FLOW} AND ts(name=vernalis_flow)<${MIDR_TRIGGER_FLOW})) OR NOT(a_summer OR a_late_summer OR a_winter)"     
oldr_flood              "chan_stage(channel=80,dist=0) - chan_stage(channel=79,dist=length) > 0.0"                                                                     
oldr_op                 "(ts(name=vernalis_flow) > ${OLDR_TRIGGER_FLOW}  AND (a_summer OR a_late_summer OR a_winter)) OR (${VERNALIS_CLEAN} AND (a_summer OR a_winter))" 
oldr_stage_low          "(chan_stage(channel=71,dist=3116) < ${CLOSE_THRESH})"                                                                                         
oldr_stage_relax        "(chan_stage(channel=71,dist=3116) > ${OPEN_THRESH})"                                                                                          
oldr_unidir             "(NOT ${VERNALIS_CLEAN} AND (ts(name=vernalis_flow) < ${OLDR_OPEN_FLOW} AND ts(name=vernalis_flow) < ${OLDR_TRIGGER_FLOW})) OR NOT (a_summer OR a_late_summer OR a_winter)" 
orh_partial_sjr_flow    "ts(name=vernalis_flow) > ${LO_ORH_PARTIAL_FLOW} AND ts(name=vernalis_flow) < ${HI_ORH_PARTIAL_FLOW}"                                          
sjr_high                "ts(name=vernalis_flow) > ${SJR_HIGH_FLOW}"                                                                                                    
south_delta_stage_low   "(glc_stage_low OR oldr_stage_low OR midr_stage_low)"                                                                                          
south_delta_stage_relax "(glc_stage_relax AND oldr_stage_relax AND midr_stage_relax)"                                                                                  
END



OPRULE_TIME_SERIES
NAME          FILLIN FILE                PATH                                                                
vernalis_ec   linear ${QUALBOUNDARYFILE} /CALSIM-${SJR_PROCESS}/VERNWQFINAL/SALINITY-EC//1DAY/${CALSIMSTUDY}/ 
vernalis_flow linear ${BOUNDARYFILE}     /CALSIM-VAMP/C639/FLOW//1DAY/${CALSIMSTUDY}/                         
END


