those sql queries worked:

create table channel (
    channel_id INT not null,
    layer_id INT not null,
    channel_number INT not null,
    length_ft INT not null,
    manning FLOAT not null,
    dispersion FLOAT not null,
    down_node INT not null,
    up_node INT not null,
    used INT not null
)

;
table channel is populated successfully;
create table channel_init_condition (
    icid INT not null,
    channel_number INT not null,
    distance INT not null,
    layer_id INT not null,
    variable_name VARCHAR(16) not null,
    initial_value FLOAT not null,
    used INT not null
)

;
table channel_init_condition is populated successfully;
create table channel_xsect (
    xsect_id INT not null,
    channel_id INT not null,
    channel_fract_dist FLOAT not null,
    copied_from INT,
    description VARCHAR(32)
)

;
table channel_xsect is populated successfully;
create table climate_variable_description (
    climate_variable_id INT not null,
    name VARCHAR(32) not null,
    description VARCHAR(64)
)

;
table climate_variable_description is populated successfully;
create table component_type_description (
    component_type_id INT not null,
    name VARCHAR(16) not null,
    description VARCHAR(64)
)

;
table component_type_description is populated successfully;
create table expression (
    expression_id INT not null,
    layer_id INT not null,
    name VARCHAR(32) not null,
    definition VARCHAR(200) not null
)

;
table expression is populated successfully;
create table fill_in_type_description (
    fill_in_type_id INT not null,
    name VARCHAR(16) not null,
    description VARCHAR(255)
)

;
table fill_in_type_description is populated successfully;
create table gate (
    gate_id INT not null,
    layer_id INT not null,
    name VARCHAR(32) not null,
    obj_connected_type INT not null,
    obj_connected_identifier VARCHAR(32) not null,
    node_connected INT not null,
    used INT not null
)

;
table gate is populated successfully;
create table gate_control_type_description (
    control_type_id INT not null,
    name VARCHAR(32) not null,
    description VARCHAR(255)
)

;
table gate_control_type_description is populated successfully;
create table gate_default_op_description (
    op_id INT not null,
    name VARCHAR(32) not null,
    description VARCHAR(255)
)

;
table gate_default_op_description is populated successfully;
create table gate_device (
    device_id INT not null,
    gate_id INT not null,
    name VARCHAR(32) not null,
    structure_type INT not null,
    control_type INT not null,
    nduplicate INT not null,
    max_width FLOAT not null,
    base_elev FLOAT not null,
    height FLOAT not null,
    flow_coef_from_node FLOAT not null,
    flow_coef_to_node FLOAT not null,
    default_op INT not null
)

;
table gate_device is populated successfully;
create table gate_structure_description (
    structure_type_id INT not null,
    name VARCHAR(16) not null,
    description VARCHAR(255)
)

;
table gate_structure_description is populated successfully;
create table group_member (
    group_member_id INT not null,
    group_id INT not null,
    object_type_id INT not null,
    identifier VARCHAR(32) not null
)

;
table group_member is populated successfully;
create table groups (
    group_id INT not null,
    layer_id INT not null,
    name VARCHAR(32) not null,
    description VARCHAR(255),
    used INT not null
)

;
table groups is populated successfully;
create table input_role_description (
    role_id INT not null,
    name VARCHAR(32) not null
)

;
table input_role_description is populated successfully;
create table input_time_series_climate (
    input_series_id INT not null,
    layer_id INT not null,
    climate_variable_id INT not null,
    input_file VARCHAR(128) not null,
    path VARCHAR(80) not null,
    sign INT,
    fillin INT not null
)

;
table input_time_series_climate is populated successfully;
create table input_time_series_gate (
    input_series_id INT not null,
    layer_id INT not null,
    gate VARCHAR(32) not null,
    device VARCHAR(32),
    input_file VARCHAR(128) not null,
    path VARCHAR(80) not null,
    variable_name VARCHAR(16) not null,
    fillin INT not null,
    used INT not null
)

;
table input_time_series_gate is populated successfully;
create table input_time_series_node (
    input_series_id INT not null,
    name VARCHAR(32) not null,
    node INT not null,
    role_id INT not null,
    layer_id INT not null,
    variable_name VARCHAR(16) not null,
    input_file VARCHAR(128) not null,
    path VARCHAR(80) not null,
    sign INT,
    fillin INT not null,
    used INT not null
)

;
table input_time_series_node is populated successfully;
create table input_time_series_oprule (
    input_series_id INT not null,
    layer_id INT not null,
    name VARCHAR(32) not null,
    input_file VARCHAR(128) not null,
    path VARCHAR(80) not null,
    sign INT,
    fillin INT not null
)

;
table input_time_series_oprule is populated successfully;
create table input_time_series_reservoir (
    input_series_id INT not null,
    name VARCHAR(32) not null,
    reservoir VARCHAR(32) not null,
    layer_id INT not null,
    variable_name VARCHAR(16) not null,
    input_file VARCHAR(128) not null,
    role_id INT not null,
    path VARCHAR(80) not null,
    sign INT,
    fillin INT not null,
    used INT not null
)

;
table input_time_series_reservoir is populated successfully;
create table input_time_series_transfer (
    input_series_id INT not null,
    layer_id INT not null,
    transfer VARCHAR(32) not null,
    input_file VARCHAR(128) not null,
    path VARCHAR(80) not null,
    variable_name VARCHAR(16) not null,
    fillin INT not null,
    used INT not null
)

;
table input_time_series_transfer is populated successfully;
create table layer_definition (
    layer_id INT not null,
    name VARCHAR(32) not null,
    description VARCHAR(255),
    owner VARCHAR(16) not null,
    creation_date DATETIME not null,
    component_type VARCHAR(16) not null
)

;
table layer_definition is populated successfully;
create table model_component (
    model_component_id INT not null,
    model_id INT not null,
    component_id INT not null,
    component_type VARCHAR(16) not null,
    layer INT not null
)

;
table model_component is populated successfully;
create table model_definition (
    model_id INT not null,
    name VARCHAR(48) not null,
    computer_model VARCHAR(32) not null,
    description VARCHAR(255),
    simulation_id INT not null,
    owner VARCHAR(32) not null,
    creation_date DATETIME not null
)

;
table model_definition is populated successfully;
create table model_parameter_description (
    model_parameter_id INT not null,
    name VARCHAR(32) not null,
    description VARCHAR(255)
)

;
table model_parameter_description is populated successfully;
create table model_parameter_values (
    param_value_id INT not null,
    model_parameter_id INT not null,
    layer_id INT not null,
    parameter_value VARCHAR(32) not null
)

;
table model_parameter_values is populated successfully;
create table nc_constituent_description (
    constituent_id INT not null,
    name VARCHAR(32) not null,
    description VARCHAR(255) not null
)

;
table nc_constituent_description is populated successfully;
create table object_type_description (
    object_type_id INT not null,
    name VARCHAR(16) not null
)

;
table object_type_description is populated successfully;
create table operating_rule (
    oprule_id INT not null,
    layer_id INT not null,
    name VARCHAR(32) not null,
    oprule_action VARCHAR(255) not null,
    oprule_trigger VARCHAR(255) not null,
    used INT not null
)

;
table operating_rule is populated successfully;
create table output_time_series_channel (
    out_id INT not null,
    layer_id INT not null,
    name VARCHAR(32) not null,
    channel INT not null,
    distance INT not null,
    variable_name VARCHAR(16) not null,
    output_file VARCHAR(128) not null,
    time_interval VARCHAR(16) not null,
    period_op VARCHAR(16) not null,
    used INT not null,
    source_group VARCHAR(20)
)

;
table output_time_series_channel is populated successfully;
create table output_time_series_gate (
    out_id INT not null,
    name VARCHAR(32) not null,
    gate VARCHAR(32) not null,
    device VARCHAR(32),
    layer_id INT not null,
    output_file VARCHAR(128) not null,
    variable_name VARCHAR(16) not null,
    time_interval VARCHAR(16) not null,
    period_op VARCHAR(16) not null,
    used INT not null
)

;
table output_time_series_gate is populated successfully;
create table output_time_series_node (
    out_id INT not null,
    name VARCHAR(32) not null,
    node INT not null,
    layer_id INT not null,
    output_file VARCHAR(128) not null,
    variable_name VARCHAR(16) not null,
    time_interval VARCHAR(16) not null,
    period_op VARCHAR(16) not null,
    used INT not null,
    source_group VARCHAR(32)
)

;
table output_time_series_node is populated successfully;
create table output_time_series_reservoir (
    out_id INT not null,
    name VARCHAR(32) not null,
    reservoir VARCHAR(32) not null,
    connection_node INT,
    layer_id INT not null,
    output_file VARCHAR(128) not null,
    variable_name VARCHAR(16) not null,
    time_interval VARCHAR(16) not null,
    period_op VARCHAR(16) not null,
    used INT not null,
    source_group VARCHAR(32)
)

;
table output_time_series_reservoir is populated successfully;
create table period_op_description (
    period_op_id INT not null,
    name VARCHAR(16) not null,
    description VARCHAR(255)
)

;
table period_op_description is populated successfully;
create table permissions (
    permission_id INT not null,
    user_name VARCHAR(32) not null,
    component_set_id INT not null,
    expiration_date DATE
)

;
table permissions is populated successfully;
create table primary_key_generation (
    id_id INT not null,
    new_id INT
)

;
table primary_key_generation is populated successfully;
create table rate_coefficient (
    rate_coefficient_id INT not null,
    layer_id INT not null,
    group_name VARCHAR(32) not null,
    rate_variable_id INT not null,
    constituent_id INT not null,
    coefficient_value FLOAT not null
)

;
table rate_coefficient is populated successfully;
create table rate_variable_description (
    rate_variable_id INT not null,
    name VARCHAR(32) not null,
    description VARCHAR(255) not null
)

;
table rate_variable_description is populated successfully;
create table reservoir (
    reservoir_id INT not null,
    layer_id INT not null,
    name VARCHAR(32) not null,
    area FLOAT not null,
    bottom_elev FLOAT not null,
    used INT not null
)

;
table reservoir is populated successfully;
create table reservoir_connections (
    connection_id INT not null,
    reservoir_id INT not null,
    connected_node_number INT not null,
    in_coef FLOAT not null,
    out_coef FLOAT not null
)

;
table reservoir_connections is populated successfully;
create table reservoir_init_condition (
    icid INT not null,
    reservoir_name VARCHAR(32) not null,
    layer_id INT not null,
    variable_name VARCHAR(16) not null,
    initial_value FLOAT not null,
    used INT not null
)

;
table reservoir_init_condition is populated successfully;
create table simulation_definition (
    simulation_id INT not null,
    name VARCHAR(32) not null,
    description VARCHAR(255),
    owner VARCHAR(32) not null,
    creation_date DATETIME  not null
)

;
table simulation_definition is populated successfully;
create table transfer (
    transfer_id INT not null,
    layer_id INT not null,
    name VARCHAR(32) not null,
    from_object_type INT not null,
    from_object_identifier VARCHAR(32) not null,
    to_object_type INT not null,
    to_object_identifier VARCHAR(32) not null,
    used INT not null
)

;
table transfer is populated successfully;
create table xsect_layer (
    xsect_layer_id INT not null,
    xsect_id INT not null,
    elev FLOAT not null,
    width FLOAT not null,
    area FLOAT not null,
    wet_perimeter FLOAT not null
)

;
table xsect_layer is populated successfully;
create view delete_layers (layer_id,name,description,owner,creation_date,
       component_type) as
   select x0.layer_id ,x0.name ,x0.description ,x0.owner ,x0.creation_date ,
       x0.component_type 
   from layer_definition x0 
   where (x0.layer_id <> ALL (
      select x1.component_id 
      from model_component x1 
    ) );
create view dsm2_channel_in_model (layer,channel_id,used,channel_number,
       length_ft,manning,dispersion,down_node,up_node,model_id) as
   select x1.layer ,x0.channel_id ,x0.used ,x0.channel_number ,
       x0.length_ft ,x0.manning ,x0.dispersion ,x0.down_node ,
       x0.up_node ,x1.model_id 
   from channel x0 , model_component x1 
   where (((x0.layer_id = x1.component_id ) AND (x0.used <> 0 ) ) AND (x1.layer >= ALL (
      select x3.layer 
      from channel x2 , model_component x3 
      where (((x2.layer_id = x3.component_id ) AND (x3.model_id = x1.model_id ) ) AND (x2.channel_number = x0.channel_number ) ) 
    ) ) );
create view edit_gate_device (gate_name,layer_name,device_id,
       gate_id,name,structure_type,control_type,nduplicate,max_width,
       base_elev,height,flow_coef_from_node,flow_coef_to_node,
       default_op) as
   select x0.name ,x1.name ,x2.device_id ,x2.gate_id ,x2.name ,
       x2.structure_type ,x2.control_type ,x2.nduplicate ,x2.max_width ,
       x2.base_elev ,x2.height ,x2.flow_coef_from_node ,x2.flow_coef_to_node ,
       x2.default_op 
   from gate x0 , layer_definition x1 , gate_device x2 
   where ((x0.layer_id = x1.layer_id ) AND (x0.gate_id = x2.gate_id ) );
create view hydro_model (model_name,model_id,hydro_model_name,
       hydro_model_id) as
   select x0.name ,x0.model_id ,x1.name ,x1.model_id 
   from model_definition x0 , model_definition x1 
   where ((x1.computer_model LIKE 'hydro' ) AND (x0.simulation_id = x1.simulation_id ) );
create view model_input_ts_node (layer,input_series_id,used,name,
       node,role_id,layer_id,variable_name,input_file,path,sign,
       fillin,model_id) as
   select x1.layer ,x0.input_series_id ,x0.used ,x0.name ,x0.node ,
       x0.role_id ,x0.layer_id ,x0.variable_name ,x0.input_file ,
       x0.path ,x0.sign ,x0.fillin ,x1.model_id 
   from input_time_series_node x0 , model_component x1 
   where (((x0.layer_id = x1.component_id ) AND (x0.used <> 0 ) ) AND (x1.layer >= ALL (
      select x3.layer 
      from input_time_series_node x2 , model_component x3 
      where (((x2.layer_id = x3.component_id ) AND (x3.model_id = x1.model_id ) ) AND (x2.name = x0.name ) ) 
    ) ) );
create view v_channel (channel_id,layer_id,channel_number,length_ft,
       manning,dispersion,down_node,up_node,used) as
   select x0.channel_id ,x0.layer_id ,x0.channel_number ,x0.length_ft ,
       x0.manning ,x0.dispersion ,x0.down_node ,x0.up_node ,x0.used 
   from channel x0;
create view v_channel_init_condition (icid,channel_number,distance,
       layer_id,variable_name,initial_value,used) as
   select x0.icid ,x0.channel_number ,x0.distance ,x0.layer_id ,
       x0.variable_name ,x0.initial_value ,x0.used 
   from channel_init_condition x0;
create view v_channel_xsect (xsect_id,channel_id,channel_fract_dist,
       copied_from,description) as
   select x0.xsect_id ,x0.channel_id ,x0.channel_fract_dist ,
       x0.copied_from ,x0.description 
   from channel_xsect x0;
create view v_climate_variable_description (climate_variable_id,
       name,description) as
   select x0.climate_variable_id ,x0.name ,x0.description 
   from climate_variable_description x0;
create view v_component_type_description (component_type_id,name,
       description) as
   select x0.component_type_id ,x0.name ,x0.description 
   from component_type_description x0;
create view v_edit_gate_device (gate_name,layer_name,device_id,
       gate_id,name,structure_type,control_type,nduplicate,max_width,
       base_elev,height,flow_coef_from_node,flow_coef_to_node,
       default_op) as
   select x0.gate_name ,x0.layer_name ,x0.device_id ,x0.gate_id ,
       x0.name ,x0.structure_type ,x0.control_type ,x0.nduplicate ,
       x0.max_width ,x0.base_elev ,x0.height ,x0.flow_coef_from_node ,
       x0.flow_coef_to_node ,x0.default_op 
   from edit_gate_device x0;
create view v_expression (expression_id,layer_id,name,definition) as
   select x0.expression_id ,x0.layer_id ,x0.name ,x0.definition 
   from expression x0;
create view v_fill_in_type_description (fill_in_type_id,name,
       description) as
   select x0.fill_in_type_id ,x0.name ,x0.description 
   from fill_in_type_description x0;
create view v_gate (gate_id,layer_id,name,obj_connected_type,
       obj_connected_identifier,node_connected,used) as
   select x0.gate_id ,x0.layer_id ,x0.name ,x0.obj_connected_type ,
       x0.obj_connected_identifier ,x0.node_connected ,x0.used 
   from gate x0;
create view v_gate_control_type_description (control_type_id,
       name,description) as
   select x0.control_type_id ,x0.name ,x0.description 
   from gate_control_type_description x0;
create view v_gate_default_op_description (op_id,name,description) as
   select x0.op_id ,x0.name ,x0.description 
   from gate_default_op_description x0;
create view v_gate_device (device_id,gate_id,name,structure_type,
       control_type,nduplicate,max_width,base_elev,height,flow_coef_from_node,
       flow_coef_to_node,default_op) as
   select x0.device_id ,x0.gate_id ,x0.name ,x0.structure_type ,
       x0.control_type ,x0.nduplicate ,x0.max_width ,x0.base_elev ,
       x0.height ,x0.flow_coef_from_node ,x0.flow_coef_to_node ,
       x0.default_op 
   from gate_device x0;
create view v_gate_structure_description (structure_type_id,name,
       description) as
   select x0.structure_type_id ,x0.name ,x0.description 
   from gate_structure_description x0;
create view v_group (group_id,layer_id,name,description,used) as
   select x0.group_id ,x0.layer_id ,x0.name ,x0.description ,
       x0.used 
   from groups x0;
create view v_group_member (group_member_id,group_id,object_type_id,
       identifier) as
   select x0.group_member_id ,x0.group_id ,x0.object_type_id ,
       x0.identifier 
   from group_member x0;
create view v_input_role_description (role_id,name) as
   select x0.role_id ,x0.name 
   from input_role_description x0;
create view v_input_time_series_climate (input_series_id,layer_id,
       climate_variable_id,input_file,path,sign,fillin) as
   select x0.input_series_id ,x0.layer_id ,x0.climate_variable_id ,
       x0.input_file ,x0.path ,x0.sign ,x0.fillin 
   from input_time_series_climate x0;
create view v_input_time_series_gate (input_series_id,layer_id,
       gate,device,input_file,path,variable_name,fillin,used) as
   select x0.input_series_id ,x0.layer_id ,x0.gate ,x0.device ,
       x0.input_file ,x0.path ,x0.variable_name ,x0.fillin ,x0.used 
   from input_time_series_gate x0;
create view v_input_time_series_node (input_series_id,name,node,
       role_id,layer_id,variable_name,input_file,path,sign,fillin,
       used) as
   select x0.input_series_id ,x0.name ,x0.node ,x0.role_id ,
       x0.layer_id ,x0.variable_name ,x0.input_file ,x0.path ,
       x0.sign ,x0.fillin ,x0.used 
   from input_time_series_node x0;
create view v_input_time_series_oprule (input_series_id,layer_id,
       name,input_file,path,sign,fillin) as
   select x0.input_series_id ,x0.layer_id ,x0.name ,x0.input_file ,
       x0.path ,x0.sign ,x0.fillin 
   from input_time_series_oprule x0;
create view v_input_time_series_reservoir (input_series_id,name,
       reservoir,layer_id,variable_name,input_file,role_id,path,
       sign,fillin,used) as
   select x0.input_series_id ,x0.name ,x0.reservoir ,x0.layer_id ,
       x0.variable_name ,x0.input_file ,x0.role_id ,x0.path ,
       x0.sign ,x0.fillin ,x0.used 
   from input_time_series_reservoir x0;
create view v_input_time_series_transfer (input_series_id,layer_id,
       transfer,input_file,path,variable_name,fillin,used) as
   select x0.input_series_id ,x0.layer_id ,x0.transfer ,x0.input_file ,
       x0.path ,x0.variable_name ,x0.fillin ,x0.used 
   from input_time_series_transfer x0;
create view v_layer_definition (layer_id,name,description,owner,
       creation_date,component_type) as
   select x0.layer_id ,x0.name ,x0.description ,x0.owner ,x0.creation_date ,
       x0.component_type 
   from layer_definition x0;
create view v_model_component (model_component_id,model_id,component_id,
       component_type,layer) as
   select x0.model_component_id ,x0.model_id ,x0.component_id ,
       x0.component_type ,x0.layer 
   from model_component x0;
create view v_model_definition (model_id,name,computer_model,
       description,simulation_id,owner,creation_date) as
   select x0.model_id ,x0.name ,x0.computer_model ,x0.description ,
       x0.simulation_id ,x0.owner ,x0.creation_date 
   from model_definition x0;
create view v_model_parameter_description (model_parameter_id,
       name,description) as
   select x0.model_parameter_id ,x0.name ,x0.description 
   from model_parameter_description x0;
create view v_model_parameter_values (param_value_id,model_parameter_id,
       layer_id,parameter_value) as
   select x0.param_value_id ,x0.model_parameter_id ,x0.layer_id ,
       x0.parameter_value 
   from model_parameter_values x0;
create view v_nc_constituent_description (constituent_id,name,
       description) as
   select x0.constituent_id ,x0.name ,x0.description 
   from nc_constituent_description x0;
create view v_object_type_description (object_type_id,name) as
   select x0.object_type_id ,x0.name 
   from object_type_description x0;
create view v_operating_rule (oprule_id,layer_id,name,oprule_action,
       oprule_trigger,used) as
   select x0.oprule_id ,x0.layer_id ,x0.name ,x0.oprule_action ,
       x0.oprule_trigger ,x0.used 
   from operating_rule x0;
create view v_output_time_series_channel (out_id,layer_id,name,
       channel,distance,variable_name,output_file,time_interval,
       period_op,used,source_group) as
   select x0.out_id ,x0.layer_id ,x0.name ,x0.channel ,x0.distance ,
       x0.variable_name ,x0.output_file ,x0.time_interval ,x0.period_op ,
       x0.used ,x0.source_group 
   from output_time_series_channel x0;
create view v_output_time_series_gate (out_id,name,gate,device,
       layer_id,output_file,variable_name,time_interval,period_op,
       used) as
   select x0.out_id ,x0.name ,x0.gate ,x0.device ,x0.layer_id ,
       x0.output_file ,x0.variable_name ,x0.time_interval ,x0.period_op ,
       x0.used 
   from output_time_series_gate x0;
create view v_output_time_series_node (out_id,name,node,layer_id,
       output_file,variable_name,time_interval,period_op,used,
       source_group) as
   select x0.out_id ,x0.name ,x0.node ,x0.layer_id ,x0.output_file ,
       x0.variable_name ,x0.time_interval ,x0.period_op ,x0.used ,
       x0.source_group 
   from output_time_series_node x0;
create view v_output_time_series_reservoir (out_id,name,reservoir,
       connection_node,layer_id,output_file,variable_name,time_interval,
       period_op,used,source_group) as
   select x0.out_id ,x0.name ,x0.reservoir ,x0.connection_node ,
       x0.layer_id ,x0.output_file ,x0.variable_name ,x0.time_interval ,
       x0.period_op ,x0.used ,x0.source_group 
   from output_time_series_reservoir x0;
create view v_period_op_description (period_op_id,name,description) as
   select x0.period_op_id ,x0.name ,x0.description 
   from period_op_description x0;
create view v_permissions (permission_id,user_name,component_set_id,
       expiration_date) as
   select x0.permission_id ,x0.user_name ,x0.component_set_id ,
       x0.expiration_date 
   from permissions x0;
create view v_primary_key_generation (id_id,new_id) as
   select x0.id_id ,x0.new_id 
   from primary_key_generation x0;
create view v_rate_coefficient (rate_coefficient_id,layer_id,
       group_name,rate_variable_id,constituent_id,coefficient_value) as
   select x0.rate_coefficient_id ,x0.layer_id ,x0.group_name ,
       x0.rate_variable_id ,x0.constituent_id ,x0.coefficient_value 
   from rate_coefficient x0;
create view v_rate_variable_description (rate_variable_id,name,
       description) as
   select x0.rate_variable_id ,x0.name ,x0.description 
   from rate_variable_description x0;
create view v_reservoir (reservoir_id,layer_id,name,area,bottom_elev,
       used) as
   select x0.reservoir_id ,x0.layer_id ,x0.name ,x0.area ,x0.bottom_elev ,
       x0.used 
   from reservoir x0;
create view v_reservoir_connections (connection_id,reservoir_id,
       connected_node_number,in_coef,out_coef) as
   select x0.connection_id ,x0.reservoir_id ,x0.connected_node_number ,
       x0.in_coef ,x0.out_coef 
   from reservoir_connections x0;
create view v_reservoir_init_condition (icid,reservoir_name,layer_id,
       variable_name,initial_value,used) as
   select x0.icid ,x0.reservoir_name ,x0.layer_id ,x0.variable_name ,
       x0.initial_value ,x0.used 
   from reservoir_init_condition x0;
create view v_simulation_definition (simulation_id,name,description,
       owner,creation_date) as
   select x0.simulation_id ,x0.name ,x0.description ,x0.owner ,
       x0.creation_date 
   from simulation_definition x0;
create view v_transfer (transfer_id,layer_id,name,from_object_type,
       from_object_identifier,to_object_type,to_object_identifier,
       used) as
   select x0.transfer_id ,x0.layer_id ,x0.name ,x0.from_object_type ,
       x0.from_object_identifier ,x0.to_object_type ,x0.to_object_identifier ,
       x0.used 
   from transfer x0;
create view v_xsect_layer (xsect_layer_id,xsect_id,elev,width,
       area,wet_perimeter) as
   select x0.xsect_layer_id ,x0.xsect_id ,x0.elev ,x0.width ,
       x0.area ,x0.wet_perimeter 
   from xsect_layer x0;
ALTER TABLE CHANNEL ADD CONSTRAINT U103_244 UNIQUE 
	(LAYER_ID, CHANNEL_NUMBER)
;
ALTER TABLE CHANNEL ADD CONSTRAINT U103_284 PRIMARY KEY 
	(CHANNEL_ID)
;
ALTER TABLE CHANNEL ADD CONSTRAINT C103_226 CHECK 
	((LENGTH_FT > 0 ))
;
ALTER TABLE CHANNEL ADD CONSTRAINT C103_227 CHECK 
	(((MANNING >= 0 ) AND (MANNING < 1 ) ))
;
ALTER TABLE CHANNEL ADD CONSTRAINT C103_228 CHECK 
	((DISPERSION >= 0 ))
;
ALTER TABLE CHANNEL_INIT_CONDITION ADD CONSTRAINT U104_245 UNIQUE 
	(LAYER_ID, CHANNEL_NUMBER, DISTANCE, VARIABLE_NAME)
;
ALTER TABLE CHANNEL_INIT_CONDITION ADD CONSTRAINT U104_285 PRIMARY KEY 
	(ICID)
;
ALTER TABLE CHANNEL_XSECT ADD CONSTRAINT U105_246 UNIQUE 
	(CHANNEL_ID, CHANNEL_FRACT_DIST)
;
ALTER TABLE CHANNEL_XSECT ADD CONSTRAINT U105_286 PRIMARY KEY 
	(XSECT_ID)
;
ALTER TABLE CLIMATE_VARIABLE_DESCRIPTION ADD CONSTRAINT PK_CLIMATE_VARI339 PRIMARY KEY 
	(CLIMATE_VARIABLE_ID)
;
ALTER TABLE COMPONENT_TYPE_DESCRIPTION ADD CONSTRAINT U106_247 UNIQUE 
	(NAME)
;
ALTER TABLE COMPONENT_TYPE_DESCRIPTION ADD CONSTRAINT U106_287 PRIMARY KEY 
	(COMPONENT_TYPE_ID)
;
ALTER TABLE EXPRESSION ADD CONSTRAINT U107_248 UNIQUE 
	(LAYER_ID, NAME)
;
ALTER TABLE EXPRESSION ADD CONSTRAINT U107_288 PRIMARY KEY 
	(EXPRESSION_ID)
;
ALTER TABLE FILL_IN_TYPE_DESCRIPTION ADD CONSTRAINT U108_249 UNIQUE 
	(NAME)
;
ALTER TABLE FILL_IN_TYPE_DESCRIPTION ADD CONSTRAINT U108_289 PRIMARY KEY 
	(FILL_IN_TYPE_ID)
;
ALTER TABLE GATE ADD CONSTRAINT U109_250 UNIQUE 
	(NAME, LAYER_ID)
;
ALTER TABLE GATE ADD CONSTRAINT U109_290 PRIMARY KEY 
	(GATE_ID)
;
ALTER TABLE GATE_CONTROL_TYPE_DESCRIPTION ADD CONSTRAINT U110_251 UNIQUE 
	(NAME)
;
ALTER TABLE GATE_CONTROL_TYPE_DESCRIPTION ADD CONSTRAINT U110_291 PRIMARY KEY 
	(CONTROL_TYPE_ID)
;
ALTER TABLE GATE_DEFAULT_OP_DESCRIPTION ADD CONSTRAINT U111_252 UNIQUE 
	(NAME)
;
ALTER TABLE GATE_DEFAULT_OP_DESCRIPTION ADD CONSTRAINT U111_292 PRIMARY KEY 
	(OP_ID)
;
ALTER TABLE GATE_DEVICE ADD CONSTRAINT U112_253 UNIQUE 
	(NAME, GATE_ID)
;
ALTER TABLE GATE_DEVICE ADD CONSTRAINT U112_293 PRIMARY KEY 
	(DEVICE_ID)
;
ALTER TABLE GATE_STRUCTURE_DESCRIPTION ADD CONSTRAINT U114_255 UNIQUE 
	(NAME)
;
ALTER TABLE GATE_STRUCTURE_DESCRIPTION ADD CONSTRAINT U114_295 PRIMARY KEY 
	(STRUCTURE_TYPE_ID)
;
ALTER TABLE GROUP_MEMBER ADD CONSTRAINT U202_381 PRIMARY KEY 
	(GROUP_MEMBER_ID)
;
ALTER TABLE GROUPS ADD CONSTRAINT U200_371 UNIQUE 
	(NAME, LAYER_ID)
;
ALTER TABLE GROUPS ADD CONSTRAINT U200_372 PRIMARY KEY 
	(GROUP_ID)
;
ALTER TABLE INPUT_ROLE_DESCRIPTION ADD CONSTRAINT U116_257 UNIQUE 
	(NAME)
;
ALTER TABLE INPUT_ROLE_DESCRIPTION ADD CONSTRAINT U116_297 PRIMARY KEY 
	(ROLE_ID)
;
ALTER TABLE INPUT_TIME_SERIES_CLIMATE ADD CONSTRAINT CT_INPUT_TIME_S839 UNIQUE 
	(LAYER_ID, CLIMATE_VARIABLE_ID)
;
ALTER TABLE INPUT_TIME_SERIES_CLIMATE ADD CONSTRAINT PK_INPUT_TIME_S937 PRIMARY KEY 
	(INPUT_SERIES_ID)
;
ALTER TABLE INPUT_TIME_SERIES_GATE ADD CONSTRAINT U117_258 UNIQUE 
	(GATE, DEVICE, VARIABLE_NAME, LAYER_ID)
;
ALTER TABLE INPUT_TIME_SERIES_GATE ADD CONSTRAINT U117_298 PRIMARY KEY 
	(INPUT_SERIES_ID)
;
ALTER TABLE INPUT_TIME_SERIES_NODE ADD CONSTRAINT U118_259 UNIQUE 
	(NODE, LAYER_ID, NAME, VARIABLE_NAME)
;
ALTER TABLE INPUT_TIME_SERIES_NODE ADD CONSTRAINT U118_299 PRIMARY KEY 
	(INPUT_SERIES_ID)
;
ALTER TABLE INPUT_TIME_SERIES_OPRULE ADD CONSTRAINT U119_260 UNIQUE 
	(LAYER_ID, NAME)
;
ALTER TABLE INPUT_TIME_SERIES_OPRULE ADD CONSTRAINT U119_300 PRIMARY KEY 
	(INPUT_SERIES_ID)
;
ALTER TABLE INPUT_TIME_SERIES_RESERVOIR ADD CONSTRAINT U120_261 UNIQUE 
	(LAYER_ID, NAME, RESERVOIR)
;
ALTER TABLE INPUT_TIME_SERIES_RESERVOIR ADD CONSTRAINT U120_301 PRIMARY KEY 
	(INPUT_SERIES_ID)
;
ALTER TABLE INPUT_TIME_SERIES_TRANSFER ADD CONSTRAINT U121_262 UNIQUE 
	(LAYER_ID, TRANSFER, VARIABLE_NAME)
;
ALTER TABLE INPUT_TIME_SERIES_TRANSFER ADD CONSTRAINT U121_302 PRIMARY KEY 
	(INPUT_SERIES_ID)
;
ALTER TABLE LAYER_DEFINITION ADD CONSTRAINT U122_263 UNIQUE 
	(NAME)
;
ALTER TABLE LAYER_DEFINITION ADD CONSTRAINT U122_303 PRIMARY KEY 
	(LAYER_ID)
;
ALTER TABLE MODEL_COMPONENT ADD CONSTRAINT U123_264 UNIQUE 
	(MODEL_ID, COMPONENT_TYPE, LAYER)
;
ALTER TABLE MODEL_COMPONENT ADD CONSTRAINT U123_304 PRIMARY KEY 
	(MODEL_COMPONENT_ID)
;
ALTER TABLE MODEL_DEFINITION ADD CONSTRAINT U124_265 UNIQUE 
	(NAME)
;
ALTER TABLE MODEL_DEFINITION ADD CONSTRAINT U124_305 PRIMARY KEY 
	(MODEL_ID)
;
ALTER TABLE MODEL_DEFINITION ADD CONSTRAINT C124_229 CHECK 
	((COMPUTER_MODEL IN ('HYDRO' ,'QUAL' ,'PTM' )))
;
ALTER TABLE MODEL_PARAMETER_DESCRIPTION ADD CONSTRAINT U125_266 UNIQUE 
	(NAME)
;
ALTER TABLE MODEL_PARAMETER_DESCRIPTION ADD CONSTRAINT U125_306 PRIMARY KEY 
	(MODEL_PARAMETER_ID)
;
ALTER TABLE MODEL_PARAMETER_VALUES ADD CONSTRAINT U126_267 UNIQUE 
	(MODEL_PARAMETER_ID, LAYER_ID)
;
ALTER TABLE MODEL_PARAMETER_VALUES ADD CONSTRAINT U126_307 PRIMARY KEY 
	(PARAM_VALUE_ID)
;
ALTER TABLE NC_CONSTITUENT_DESCRIPTION ADD CONSTRAINT PK_NONCONSERVE_155 PRIMARY KEY 
	(CONSTITUENT_ID)
;
ALTER TABLE OBJECT_TYPE_DESCRIPTION ADD CONSTRAINT U127_268 UNIQUE 
	(NAME)
;
ALTER TABLE OBJECT_TYPE_DESCRIPTION ADD CONSTRAINT U127_308 PRIMARY KEY 
	(OBJECT_TYPE_ID)
;
ALTER TABLE OPERATING_RULE ADD CONSTRAINT U128_269 UNIQUE 
	(LAYER_ID, NAME)
;
ALTER TABLE OPERATING_RULE ADD CONSTRAINT U128_309 PRIMARY KEY 
	(OPRULE_ID)
;
ALTER TABLE OUTPUT_TIME_SERIES_CHANNEL ADD CONSTRAINT U220_270 UNIQUE 
	(NAME, VARIABLE_NAME, LAYER_ID, TIME_INTERVAL, PERIOD_OP)
;
ALTER TABLE OUTPUT_TIME_SERIES_CHANNEL ADD CONSTRAINT U220_310 PRIMARY KEY 
	(OUT_ID)
;
ALTER TABLE OUTPUT_TIME_SERIES_GATE ADD CONSTRAINT U130_271 UNIQUE 
	(NAME, VARIABLE_NAME, LAYER_ID, TIME_INTERVAL, PERIOD_OP)
;
ALTER TABLE OUTPUT_TIME_SERIES_GATE ADD CONSTRAINT U130_311 PRIMARY KEY 
	(OUT_ID)
;
ALTER TABLE OUTPUT_TIME_SERIES_NODE ADD CONSTRAINT U221_272 UNIQUE 
	(LAYER_ID, VARIABLE_NAME, TIME_INTERVAL, PERIOD_OP, NAME)
;
ALTER TABLE OUTPUT_TIME_SERIES_NODE ADD CONSTRAINT U221_312 PRIMARY KEY 
	(OUT_ID)
;
ALTER TABLE OUTPUT_TIME_SERIES_RESERVOIR ADD CONSTRAINT U132_273 UNIQUE 
	(NAME, LAYER_ID, VARIABLE_NAME, TIME_INTERVAL, PERIOD_OP, SOURCE_GROUP)
;
ALTER TABLE OUTPUT_TIME_SERIES_RESERVOIR ADD CONSTRAINT U132_313 PRIMARY KEY 
	(OUT_ID)
;
ALTER TABLE PERIOD_OP_DESCRIPTION ADD CONSTRAINT U133_274 UNIQUE 
	(NAME)
;
ALTER TABLE PERIOD_OP_DESCRIPTION ADD CONSTRAINT U133_314 PRIMARY KEY 
	(PERIOD_OP_ID)
;
ALTER TABLE PERMISSIONS ADD CONSTRAINT U134_275 UNIQUE 
	(USER_NAME, COMPONENT_SET_ID)
;
ALTER TABLE PERMISSIONS ADD CONSTRAINT U134_315 PRIMARY KEY 
	(PERMISSION_ID)
;
ALTER TABLE PRIMARY_KEY_GENERATION ADD CONSTRAINT U136_317 PRIMARY KEY 
	(ID_ID)
;
ALTER TABLE RATE_COEFFICIENT ADD CONSTRAINT CT_RATE_COEFFIC667 UNIQUE 
	(LAYER_ID, GROUP_NAME, RATE_VARIABLE_ID, CONSTITUENT_ID)
;
ALTER TABLE RATE_COEFFICIENT ADD CONSTRAINT PK_RATE_COEFFIC503 PRIMARY KEY 
	(RATE_COEFFICIENT_ID)
;
ALTER TABLE RATE_VARIABLE_DESCRIPTION ADD CONSTRAINT PK_RATE_VARIABL517 PRIMARY KEY 
	(RATE_VARIABLE_ID)
;
ALTER TABLE RESERVOIR ADD CONSTRAINT U137_277 UNIQUE 
	(LAYER_ID, NAME)
;
ALTER TABLE RESERVOIR ADD CONSTRAINT U137_318 PRIMARY KEY 
	(RESERVOIR_ID)
;
ALTER TABLE RESERVOIR ADD CONSTRAINT C137_243 CHECK 
	((AREA > 0. ))
;
ALTER TABLE RESERVOIR_CONNECTIONS ADD CONSTRAINT U138_278 UNIQUE 
	(RESERVOIR_ID, CONNECTED_NODE_NUMBER)
;
ALTER TABLE RESERVOIR_CONNECTIONS ADD CONSTRAINT U138_319 PRIMARY KEY 
	(CONNECTION_ID)
;
ALTER TABLE RESERVOIR_CONNECTIONS ADD CONSTRAINT C138_234 CHECK 
	((IN_COEF >= 0 ))
;
ALTER TABLE RESERVOIR_CONNECTIONS ADD CONSTRAINT C138_235 CHECK 
	((OUT_COEF >= 0 ))
;
ALTER TABLE RESERVOIR_INIT_CONDITION ADD CONSTRAINT U139_279 UNIQUE 
	(LAYER_ID, RESERVOIR_NAME, VARIABLE_NAME)
;
ALTER TABLE RESERVOIR_INIT_CONDITION ADD CONSTRAINT U139_320 PRIMARY KEY 
	(ICID)
;
ALTER TABLE SIMULATION_DEFINITION ADD CONSTRAINT U140_280 UNIQUE 
	(NAME)
;
ALTER TABLE SIMULATION_DEFINITION ADD CONSTRAINT U140_321 PRIMARY KEY 
	(SIMULATION_ID)
;
ALTER TABLE TRANSFER ADD CONSTRAINT U141_281 UNIQUE 
	(LAYER_ID, NAME)
;
ALTER TABLE TRANSFER ADD CONSTRAINT U141_322 PRIMARY KEY 
	(TRANSFER_ID)
;
ALTER TABLE XSECT_LAYER ADD CONSTRAINT U143_283 UNIQUE 
	(XSECT_ID, ELEV)
;
ALTER TABLE XSECT_LAYER ADD CONSTRAINT U143_324 PRIMARY KEY 
	(XSECT_LAYER_ID)
;
ALTER TABLE XSECT_LAYER ADD CONSTRAINT C143_240 CHECK 
	((WIDTH >= 0 ))
;
ALTER TABLE XSECT_LAYER ADD CONSTRAINT C143_241 CHECK 
	((AREA >= 0 ))
;
ALTER TABLE XSECT_LAYER ADD CONSTRAINT C143_242 CHECK 
	((WET_PERIMETER >= 0 ))
;
ALTER TABLE CHANNEL ADD CONSTRAINT R103_325 FOREIGN KEY 
	(LAYER_ID)
	REFERENCES LAYER_DEFINITION
	(LAYER_ID) 
	ON DELETE CASCADE 
;
ALTER TABLE CHANNEL_XSECT ADD CONSTRAINT R105_326 FOREIGN KEY 
	(CHANNEL_ID)
	REFERENCES CHANNEL
	(CHANNEL_ID) 
	ON DELETE CASCADE 
;
ALTER TABLE EXPRESSION ADD CONSTRAINT R107_327 FOREIGN KEY 
	(LAYER_ID)
	REFERENCES LAYER_DEFINITION
	(LAYER_ID) 
	ON DELETE CASCADE 
;
ALTER TABLE GATE ADD CONSTRAINT R109_328 FOREIGN KEY 
	(OBJ_CONNECTED_TYPE)
	REFERENCES OBJECT_TYPE_DESCRIPTION
	(OBJECT_TYPE_ID) 
;
ALTER TABLE GATE ADD CONSTRAINT R109_329 FOREIGN KEY 
	(LAYER_ID)
	REFERENCES LAYER_DEFINITION
	(LAYER_ID) 
	ON DELETE CASCADE 
;
ALTER TABLE GATE_DEVICE ADD CONSTRAINT R112_330 FOREIGN KEY 
	(GATE_ID)
	REFERENCES GATE
	(GATE_ID) 
	ON DELETE CASCADE 
;
ALTER TABLE GATE_DEVICE ADD CONSTRAINT R112_331 FOREIGN KEY 
	(DEFAULT_OP)
	REFERENCES GATE_DEFAULT_OP_DESCRIPTION
	(OP_ID) 
;
ALTER TABLE GATE_DEVICE ADD CONSTRAINT R112_332 FOREIGN KEY 
	(CONTROL_TYPE)
	REFERENCES GATE_CONTROL_TYPE_DESCRIPTION
	(CONTROL_TYPE_ID) 
;
ALTER TABLE GATE_DEVICE ADD CONSTRAINT R112_333 FOREIGN KEY 
	(STRUCTURE_TYPE)
	REFERENCES GATE_STRUCTURE_DESCRIPTION
	(STRUCTURE_TYPE_ID) 
	ON DELETE CASCADE 
;
ALTER TABLE GROUP_MEMBER ADD CONSTRAINT R202_387 FOREIGN KEY 
	(GROUP_ID)
	REFERENCES GROUPS
	(GROUP_ID) 
	ON DELETE CASCADE 
;
ALTER TABLE GROUP_MEMBER ADD CONSTRAINT R202_388 FOREIGN KEY 
	(OBJECT_TYPE_ID)
	REFERENCES OBJECT_TYPE_DESCRIPTION
	(OBJECT_TYPE_ID) 
;
ALTER TABLE INPUT_TIME_SERIES_CLIMATE ADD CONSTRAINT FK_INPUT_TIME_S756 FOREIGN KEY 
	(CLIMATE_VARIABLE_ID)
	REFERENCES CLIMATE_VARIABLE_DESCRIPTION
	(CLIMATE_VARIABLE_ID) 
	ON DELETE CASCADE 
;
ALTER TABLE INPUT_TIME_SERIES_CLIMATE ADD CONSTRAINT FK_INPUT_TIME_S954 FOREIGN KEY 
	(FILLIN)
	REFERENCES FILL_IN_TYPE_DESCRIPTION
	(FILL_IN_TYPE_ID) 
	ON DELETE CASCADE 
;
ALTER TABLE INPUT_TIME_SERIES_GATE ADD CONSTRAINT R117_336 FOREIGN KEY 
	(LAYER_ID)
	REFERENCES LAYER_DEFINITION
	(LAYER_ID) 
	ON DELETE CASCADE 
;
ALTER TABLE INPUT_TIME_SERIES_GATE ADD CONSTRAINT R117_337 FOREIGN KEY 
	(FILLIN)
	REFERENCES FILL_IN_TYPE_DESCRIPTION
	(FILL_IN_TYPE_ID) 
;
ALTER TABLE INPUT_TIME_SERIES_NODE ADD CONSTRAINT R118_338 FOREIGN KEY 
	(LAYER_ID)
	REFERENCES LAYER_DEFINITION
	(LAYER_ID) 
	ON DELETE CASCADE 
;
ALTER TABLE INPUT_TIME_SERIES_NODE ADD CONSTRAINT R118_339 FOREIGN KEY 
	(ROLE_ID)
	REFERENCES INPUT_ROLE_DESCRIPTION
	(ROLE_ID) 
;
ALTER TABLE INPUT_TIME_SERIES_NODE ADD CONSTRAINT R118_340 FOREIGN KEY 
	(FILLIN)
	REFERENCES FILL_IN_TYPE_DESCRIPTION
	(FILL_IN_TYPE_ID) 
;
ALTER TABLE INPUT_TIME_SERIES_OPRULE ADD CONSTRAINT R119_341 FOREIGN KEY 
	(LAYER_ID)
	REFERENCES LAYER_DEFINITION
	(LAYER_ID) 
	ON DELETE CASCADE 
;
ALTER TABLE INPUT_TIME_SERIES_OPRULE ADD CONSTRAINT R119_342 FOREIGN KEY 
	(FILLIN)
	REFERENCES FILL_IN_TYPE_DESCRIPTION
	(FILL_IN_TYPE_ID) 
;
ALTER TABLE INPUT_TIME_SERIES_RESERVOIR ADD CONSTRAINT R120_343 FOREIGN KEY 
	(FILLIN)
	REFERENCES FILL_IN_TYPE_DESCRIPTION
	(FILL_IN_TYPE_ID) 
;
ALTER TABLE INPUT_TIME_SERIES_RESERVOIR ADD CONSTRAINT R120_344 FOREIGN KEY 
	(LAYER_ID)
	REFERENCES LAYER_DEFINITION
	(LAYER_ID) 
	ON DELETE CASCADE 
;
ALTER TABLE INPUT_TIME_SERIES_RESERVOIR ADD CONSTRAINT R120_345 FOREIGN KEY 
	(ROLE_ID)
	REFERENCES INPUT_ROLE_DESCRIPTION
	(ROLE_ID) 
;
ALTER TABLE INPUT_TIME_SERIES_TRANSFER ADD CONSTRAINT R121_346 FOREIGN KEY 
	(LAYER_ID)
	REFERENCES LAYER_DEFINITION
	(LAYER_ID) 
	ON DELETE CASCADE 
;
ALTER TABLE INPUT_TIME_SERIES_TRANSFER ADD CONSTRAINT R121_347 FOREIGN KEY 
	(FILLIN)
	REFERENCES FILL_IN_TYPE_DESCRIPTION
	(FILL_IN_TYPE_ID) 
;
ALTER TABLE LAYER_DEFINITION ADD CONSTRAINT R122_348 FOREIGN KEY 
	(COMPONENT_TYPE)
	REFERENCES COMPONENT_TYPE_DESCRIPTION
	(NAME) 
;
ALTER TABLE MODEL_COMPONENT ADD CONSTRAINT R123_349 FOREIGN KEY 
	(MODEL_ID)
	REFERENCES MODEL_DEFINITION
	(MODEL_ID) 
	ON DELETE CASCADE 
;
ALTER TABLE MODEL_COMPONENT ADD CONSTRAINT R123_350 FOREIGN KEY 
	(COMPONENT_TYPE)
	REFERENCES COMPONENT_TYPE_DESCRIPTION
	(NAME) 
;
ALTER TABLE MODEL_DEFINITION ADD CONSTRAINT R124_351 FOREIGN KEY 
	(SIMULATION_ID)
	REFERENCES SIMULATION_DEFINITION
	(SIMULATION_ID) 
	ON DELETE CASCADE 
;
ALTER TABLE MODEL_PARAMETER_VALUES ADD CONSTRAINT R126_352 FOREIGN KEY 
	(MODEL_PARAMETER_ID)
	REFERENCES MODEL_PARAMETER_DESCRIPTION
	(MODEL_PARAMETER_ID) 
;
ALTER TABLE MODEL_PARAMETER_VALUES ADD CONSTRAINT R126_353 FOREIGN KEY 
	(LAYER_ID)
	REFERENCES LAYER_DEFINITION
	(LAYER_ID) 
	ON DELETE CASCADE 
;
ALTER TABLE OPERATING_RULE ADD CONSTRAINT R128_354 FOREIGN KEY 
	(LAYER_ID)
	REFERENCES LAYER_DEFINITION
	(LAYER_ID) 
	ON DELETE CASCADE 
;
ALTER TABLE OUTPUT_TIME_SERIES_CHANNEL ADD CONSTRAINT R220_355 FOREIGN KEY 
	(LAYER_ID)
	REFERENCES LAYER_DEFINITION
	(LAYER_ID) 
	ON DELETE CASCADE 
;
ALTER TABLE OUTPUT_TIME_SERIES_CHANNEL ADD CONSTRAINT R220_356 FOREIGN KEY 
	(PERIOD_OP)
	REFERENCES PERIOD_OP_DESCRIPTION
	(NAME) 
;
ALTER TABLE OUTPUT_TIME_SERIES_GATE ADD CONSTRAINT R130_357 FOREIGN KEY 
	(PERIOD_OP)
	REFERENCES PERIOD_OP_DESCRIPTION
	(NAME) 
;
ALTER TABLE OUTPUT_TIME_SERIES_GATE ADD CONSTRAINT R130_358 FOREIGN KEY 
	(LAYER_ID)
	REFERENCES LAYER_DEFINITION
	(LAYER_ID) 
	ON DELETE CASCADE 
;
ALTER TABLE OUTPUT_TIME_SERIES_NODE ADD CONSTRAINT R221_359 FOREIGN KEY 
	(LAYER_ID)
	REFERENCES LAYER_DEFINITION
	(LAYER_ID) 
	ON DELETE CASCADE 
;
ALTER TABLE OUTPUT_TIME_SERIES_NODE ADD CONSTRAINT R221_360 FOREIGN KEY 
	(PERIOD_OP)
	REFERENCES PERIOD_OP_DESCRIPTION
	(NAME) 
;
ALTER TABLE OUTPUT_TIME_SERIES_RESERVOIR ADD CONSTRAINT R132_361 FOREIGN KEY 
	(LAYER_ID)
	REFERENCES LAYER_DEFINITION
	(LAYER_ID) 
	ON DELETE CASCADE 
;
ALTER TABLE OUTPUT_TIME_SERIES_RESERVOIR ADD CONSTRAINT R132_362 FOREIGN KEY 
	(PERIOD_OP)
	REFERENCES PERIOD_OP_DESCRIPTION
	(NAME) 
;
ALTER TABLE RATE_COEFFICIENT ADD CONSTRAINT FK_RATE_COEFFIC917 FOREIGN KEY 
	(RATE_VARIABLE_ID)
	REFERENCES RATE_VARIABLE_DESCRIPTION
	(RATE_VARIABLE_ID) 
	ON DELETE CASCADE 
;
ALTER TABLE RATE_COEFFICIENT ADD CONSTRAINT FK_RATE_COEFFIC825 FOREIGN KEY 
	(CONSTITUENT_ID)
	REFERENCES NC_CONSTITUENT_DESCRIPTION
	(CONSTITUENT_ID) 
	ON DELETE CASCADE 
;
ALTER TABLE RESERVOIR ADD CONSTRAINT R137_364 FOREIGN KEY 
	(LAYER_ID)
	REFERENCES LAYER_DEFINITION
	(LAYER_ID) 
	ON DELETE CASCADE 
;
ALTER TABLE RESERVOIR_CONNECTIONS ADD CONSTRAINT R138_365 FOREIGN KEY 
	(RESERVOIR_ID)
	REFERENCES RESERVOIR
	(RESERVOIR_ID) 
	ON DELETE CASCADE 
;
ALTER TABLE TRANSFER ADD CONSTRAINT R141_366 FOREIGN KEY 
	(LAYER_ID)
	REFERENCES LAYER_DEFINITION
	(LAYER_ID) 
	ON DELETE CASCADE 
;
ALTER TABLE TRANSFER ADD CONSTRAINT R141_367 FOREIGN KEY 
	(FROM_OBJECT_TYPE)
	REFERENCES OBJECT_TYPE_DESCRIPTION
	(OBJECT_TYPE_ID) 
;
ALTER TABLE TRANSFER ADD CONSTRAINT R141_368 FOREIGN KEY 
	(TO_OBJECT_TYPE)
	REFERENCES OBJECT_TYPE_DESCRIPTION
	(OBJECT_TYPE_ID) 
;
ALTER TABLE XSECT_LAYER ADD CONSTRAINT R143_370 FOREIGN KEY 
	(XSECT_ID)
	REFERENCES CHANNEL_XSECT
	(XSECT_ID) 
	ON DELETE CASCADE 
;
