This describes how to use the preprocessor which converts from an
ascii file to DSS.

	TIME STEP 

By specifying the time step, (1YEAR, 1MONTH, 1DAY, 1HOUR, or 15MIN),
only regular time units generated (i.e. each time item generated is
the 0th minute of the time step specified)

To describe events that occur at any other time than the regular
times, the IRREGULAR time step must be selected.

	CONVERSIONS

All days and months are converted to their numeric representation.
i.e. Mon -> 1 ... SUN -> 7; JAN -> 1 ... DEC -> 12.
	A) This might lead to problems in the repeat patterns.
		User specifies [MARCH] to indicate a pattern that repeats 
		every MARCH.  However this is actually [3], a pattern that repeats
		every three months.
	B) This works fine for other input specifications, such as
		sets, and exact values.


	 REPEAT PATTERNS 
1. the first encountered repeat pattern is processed
	A. Processing order
		1) Hours
		2) Days
		3) Months
		4) Years

2. Range of times generated falls within the time range specified
(inclusive) by the user.

________________________________________________________________________________



The files needed to make the time_dependent database function are

1) /site/lib/emacs/time_dependent.el

This file contains the start-up lisp code and creates a new database
file if no file exists.  If the number of fields are changed then this
file has to be modified for the default values of the new fields.
Be sure to byte-compile-file after changes are made.

2) /delta/models/new/input/time-varying/time_dependent.fmt

This file formats the database interface.  See EDB (an EMACS DATABASE)
info for more information.

3)/delta/models/new/input/time-varying/time_dependent_fn.el

This file defines characters seperating fields and records and the
control functions needed to insure that fields meet desired
constraints.

 See EDB (an EMACS DATABASE) info for more information.

4) And of course all the files that constitute the EDB database.

